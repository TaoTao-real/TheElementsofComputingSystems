// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not(in = sel[2], out = nsel2);
    DMux4Way(in = in, sel[0..1] = sel[0..1], a = isa);
    And(a = isa, b = nsel2, out = a);
    DMux4Way(in = in, sel[0..1] = sel[0..1], b = isb);
    And(a = isb, b = nsel2, out = b);
    DMux4Way(in = in, sel[0..1] = sel[0..1], c = isc);
    And(a = isc, b = nsel2, out = c);
    DMux4Way(in = in, sel[0..1] = sel[0..1], d = isd);
    And(a = isd, b = nsel2, out = d);
    DMux4Way(in = in, sel[0..1] = sel[0..1], a = ise);
    And(a = ise, b = sel[2], out = e);
    DMux4Way(in = in, sel[0..1] = sel[0..1], b = isf);
    And(a = isf, b = sel[2], out = f);
    DMux4Way(in = in, sel[0..1] = sel[0..1], c = isg);
    And(a = isg, b = sel[2], out = g);
    DMux4Way(in = in, sel[0..1] = sel[0..1], d = ish);
    And(a = ish, b = sel[2], out = h);
}